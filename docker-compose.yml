services:
  # PostgreSQL Database for LiteLLM
  postgres:
    image: postgres:15
    container_name: litellm-postgres
    environment:
      - POSTGRES_DB=litellm
      - POSTGRES_USER=litellm
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - openwebui-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U litellm" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # LiteLLM - AI API Gateway
  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    container_name: litellm
    ports:
      - "4000:4000" # LiteLLM API gateway
    volumes:
      - ./litellm_config.yaml:/app/config.yaml
      - litellm-data:/app/data
    environment:
      # LiteLLM Core Settings
      - LITELLM_MASTER_KEY=${LITELLM_MASTER_KEY}
      - LITELLM_SALT_KEY=${LITELLM_SALT_KEY}
      - DATABASE_URL=postgresql://litellm:${POSTGRES_PASSWORD}@postgres:5432/litellm
      - NO_DOCS=True
      - STORE_MODEL_IN_DB=True
      # AI Provider API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - XAI_API_KEY=${XAI_API_KEY}

      # Optional: UI Access
      - UI_USERNAME=${UI_USERNAME}
      - UI_PASSWORD=${UI_PASSWORD}

    command: [ "--config", "/app/config.yaml", "--detailed_debug" ]
    restart: unless-stopped
    networks:
      - openwebui-network
    healthcheck:

      test: [ "CMD", "curl", "-f", "http://localhost:4000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - postgres
    labels:
      - com.centurylinklabs.watchtower.scope=openwebui-ai

  # OpenWebUI - Frontend Interface
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "3080:8080" # Replace LibreChat on port 3080
    volumes:
      - open-webui:/app/backend/data
    environment:
      # Core Configuration
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}
      - WEBUI_NAME=AI Assistant Hub
      - WEBUI_AUTH=True
      - ENABLE_SIGNUP=False
      - DEFAULT_USER_ROLE=user
      - ENABLE_FORWARD_USER_INFO_HEADERS=True
      - LITELLM_LOG=FALSE
      - SET_VERBOSE=False

      # Connect to LiteLLM Gateway
      # - OPENAI_API_BASE_URL=http://litellm:4000/v1
      - OPENAI_API_KEY=${LITELLM_MASTER_KEY}

      # Enhanced Features
      - ENABLE_RAG_WEB_SEARCH=true
      - RAG_WEB_SEARCH_ENGINE=searxng
      - ENABLE_IMAGE_GENERATION=true

      # Security Settings for Cloudflare
      - WEBUI_SESSION_COOKIE_SECURE=true
      - WEBUI_SESSION_COOKIE_HTTPONLY=true
      - WEBUI_SESSION_COOKIE_SAMESITE=strict

    restart: unless-stopped
    networks:
      - openwebui-network
    depends_on:
      - litellm
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - com.centurylinklabs.watchtower.scope=openwebui-ai

  # Watchtower for automatic updates
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower-ai
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_POLL_INTERVAL=3600 # Check hourly
      - WATCHTOWER_SCOPE=openwebui-ai
    command: --scope openwebui-ai
    restart: unless-stopped
    depends_on:
      - open-webui
      - litellm

volumes:
  open-webui:
  litellm-data:
  postgres-data:


networks:
  openwebui-network:
    driver: bridge
